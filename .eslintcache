[{"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\index.tsx":"1","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\App.tsx":"2","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\index.tsx":"3","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\styles.ts":"4","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\styles\\global.ts":"5","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\index.tsx":"6","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\styles.ts":"7","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\index.tsx":"8","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\styles.ts":"9","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\index.tsx":"10","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\styles.ts":"11","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\services\\api.ts":"12","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\useFetch.ts":"13","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\ActionsContext.tsx":"14","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\utils\\toast.ts":"15"},{"size":151,"mtime":1637104493353,"results":"16","hashOfConfig":"17"},{"size":510,"mtime":1637295661473,"results":"18","hashOfConfig":"17"},{"size":5903,"mtime":1637294421666,"results":"19","hashOfConfig":"17"},{"size":1381,"mtime":1637191458312,"results":"20","hashOfConfig":"17"},{"size":284,"mtime":1637296152197,"results":"21","hashOfConfig":"17"},{"size":403,"mtime":1637190514347,"results":"22","hashOfConfig":"17"},{"size":428,"mtime":1637199065201,"results":"23","hashOfConfig":"17"},{"size":2073,"mtime":1637294731706,"results":"24","hashOfConfig":"17"},{"size":170,"mtime":1637190527230,"results":"25","hashOfConfig":"17"},{"size":1043,"mtime":1637291577674,"results":"26","hashOfConfig":"17"},{"size":1195,"mtime":1637191175072,"results":"27","hashOfConfig":"17"},{"size":337,"mtime":1637284233565,"results":"28","hashOfConfig":"17"},{"size":338,"mtime":1637291046000,"results":"29","hashOfConfig":"17"},{"size":5313,"mtime":1637295795323,"results":"30","hashOfConfig":"17"},{"size":1811,"mtime":1637295478410,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"cj226j",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\index.tsx",[],[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\App.tsx",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\index.tsx",["66","67","68"],"import React, { useRef, useState } from 'react';\r\nimport { Container, Content, Actions, CardHeader } from './styles';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { FiEdit } from 'react-icons/fi';\r\nimport { FaSave } from 'react-icons/fa';\r\nimport { BiBlock } from 'react-icons/bi';\r\nimport { useActions } from '../../hooks/ActionsContext';\r\nimport {\r\n    BsFillArrowLeftCircleFill,\r\n    BsFillArrowRightCircleFill\r\n} from 'react-icons/bs';\r\nimport api from '../../services/api';\r\nimport { mutate as mutateGlobal } from 'swr';\r\ninterface CardProps {\r\n    titulo: string;\r\n    conteudo: string;\r\n    id: string;\r\n    lista: string;\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n    titulo,\r\n    conteudo,\r\n    id,\r\n    lista\r\n}: CardProps) => {\r\n    const {\r\n        handleDeleteCard,\r\n        handleEditToToDo,\r\n        handleUpdateCardContent,\r\n        setEditMode,\r\n        editMode\r\n    } = useActions();\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const texteAreaRef = useRef<HTMLTextAreaElement>(null);\r\n    const handleEditCard = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const handleDisableEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {editMode ? (\r\n                <>\r\n                    <Content>\r\n                        <input\r\n                            ref={inputRef}\r\n                            type=\"text\"\r\n                            defaultValue={titulo}\r\n                        />\r\n                        <textarea\r\n                            ref={texteAreaRef}\r\n                            rows={5}\r\n                            defaultValue={conteudo}\r\n                        ></textarea>\r\n                    </Content>\r\n                    <Actions>\r\n                        <BiBlock size={30} onClick={handleDisableEditMode} />\r\n                        <p></p>\r\n                        <FaSave\r\n                            size={30}\r\n                            onClick={() =>\r\n                                handleUpdateCardContent(\r\n                                    id,\r\n                                    lista,\r\n                                    inputRef,\r\n                                    texteAreaRef\r\n                                )\r\n                            }\r\n                        />\r\n                    </Actions>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Content>\r\n                        <CardHeader>\r\n                            <h3></h3>\r\n                            <h3>{titulo}</h3>\r\n                            <FiEdit size={25} onClick={handleEditCard} />\r\n                        </CardHeader>\r\n                        <p>{conteudo}</p>\r\n                    </Content>\r\n                    <Actions>\r\n                        <BsFillArrowLeftCircleFill\r\n                            size={30}\r\n                            onClick={\r\n                                lista === 'Doing'\r\n                                    ? () =>\r\n                                          handleEditToToDo(\r\n                                              id,\r\n                                              titulo,\r\n                                              conteudo,\r\n                                              'ToDo'\r\n                                          )\r\n                                    : lista === 'Done'\r\n                                    ? () =>\r\n                                          handleEditToToDo(\r\n                                              id,\r\n                                              titulo,\r\n                                              conteudo,\r\n                                              'Doing'\r\n                                          )\r\n                                    : () =>\r\n                                          handleEditToToDo(\r\n                                              id,\r\n                                              titulo,\r\n                                              conteudo,\r\n                                              'ToDo'\r\n                                          )\r\n                            }\r\n                        />\r\n                        <AiFillDelete\r\n                            size={30}\r\n                            onClick={() => handleDeleteCard(id)}\r\n                        />\r\n                        <BsFillArrowRightCircleFill\r\n                            size={30}\r\n                            onClick={\r\n                                lista === 'ToDo'\r\n                                    ? () =>\r\n                                          handleEditToToDo(\r\n                                              id,\r\n                                              titulo,\r\n                                              conteudo,\r\n                                              'Doing'\r\n                                          )\r\n                                    : lista === 'Doing'\r\n                                    ? () =>\r\n                                          handleEditToToDo(\r\n                                              id,\r\n                                              titulo,\r\n                                              conteudo,\r\n                                              'Done'\r\n                                          )\r\n                                    : () =>\r\n                                          handleEditToToDo(\r\n                                              id,\r\n                                              titulo,\r\n                                              conteudo,\r\n                                              'Done'\r\n                                          )\r\n                            }\r\n                        />\r\n                    </Actions>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\styles\\global.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\index.tsx",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\index.tsx",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\index.tsx",["69"],"import React, { useRef } from 'react';\r\nimport { Container, Content, Actions } from './styles';\r\nimport api from '../../services/api';\r\nimport { IoIosAddCircle } from 'react-icons/io';\r\ninterface NewCardProps {\r\n    handleCreateCard(\r\n        inputRef: React.RefObject<HTMLInputElement>,\r\n        textAreaRef: React.RefObject<HTMLTextAreaElement>\r\n    ): void;\r\n}\r\n\r\nconst NewCard: React.FC<NewCardProps> = ({\r\n    handleCreateCard\r\n}: NewCardProps) => {\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                <input ref={inputRef} type=\"text\" />\r\n                <textarea ref={textAreaRef} rows={5}></textarea>\r\n            </Content>\r\n            <Actions>\r\n                <IoIosAddCircle\r\n                    size={38}\r\n                    onClick={() => handleCreateCard(inputRef, textAreaRef)}\r\n                />\r\n            </Actions>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewCard;\r\n","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\services\\api.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\useFetch.ts",["70","71"],"import useSWR from 'swr';\r\nimport api from '../services/api';\r\n\r\nexport function useFetch<Data = any, Error = any>(url: string) {\r\n    const { data, error, mutate } = useSWR<Data, Error>(url, async (url) => {\r\n        const response = await api.get(url);\r\n        return response.data;\r\n    });\r\n\r\n    return { data, error, mutate };\r\n}\r\n","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\ActionsContext.tsx",["72","73"],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\utils\\toast.ts",[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":25,"nodeType":"76","messageId":"77","endLine":1,"endColumn":33},{"ruleId":"74","severity":1,"message":"78","line":12,"column":8,"nodeType":"76","messageId":"77","endLine":12,"endColumn":11},{"ruleId":"74","severity":1,"message":"79","line":13,"column":20,"nodeType":"76","messageId":"77","endLine":13,"endColumn":32},{"ruleId":"74","severity":1,"message":"78","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":11},{"ruleId":"80","severity":1,"message":"81","line":4,"column":33,"nodeType":"82","messageId":"83","endLine":4,"endColumn":36,"suggestions":"84"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":46,"nodeType":"82","messageId":"83","endLine":4,"endColumn":49,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"81","line":34,"column":23,"nodeType":"82","messageId":"83","endLine":34,"endColumn":26,"suggestions":"86"},{"ruleId":"80","severity":1,"message":"81","line":176,"column":20,"nodeType":"82","messageId":"83","endLine":176,"endColumn":23,"suggestions":"87"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'api' is defined but never used.","'mutateGlobal' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["88","89"],["90","91"],["92","93"],["94","95"],{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},{"messageId":"96","fix":"102","desc":"98"},{"messageId":"99","fix":"103","desc":"101"},{"messageId":"96","fix":"104","desc":"98"},{"messageId":"99","fix":"105","desc":"101"},{"messageId":"96","fix":"106","desc":"98"},{"messageId":"99","fix":"107","desc":"101"},"suggestUnknown",{"range":"108","text":"109"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"108","text":"110"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"111","text":"109"},{"range":"111","text":"110"},{"range":"112","text":"109"},{"range":"112","text":"110"},{"range":"113","text":"109"},{"range":"113","text":"110"},[97,100],"unknown","never",[110,113],[1006,1009],[5091,5094]]