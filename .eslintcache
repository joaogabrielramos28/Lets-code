[{"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\index.tsx":"1","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\App.tsx":"2","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\index.tsx":"3","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\styles.ts":"4","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\styles\\global.ts":"5","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\index.tsx":"6","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\styles.ts":"7","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\index.tsx":"8","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\styles.ts":"9","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\index.tsx":"10","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\styles.ts":"11","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\services\\api.ts":"12","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\useFetch.ts":"13","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\ActionsContext.tsx":"14","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\utils\\toast.ts":"15"},{"size":151,"mtime":1637104493353,"results":"16","hashOfConfig":"17"},{"size":510,"mtime":1637295661473,"results":"18","hashOfConfig":"17"},{"size":5570,"mtime":1637299362809,"results":"19","hashOfConfig":"17"},{"size":1872,"mtime":1637298302115,"results":"20","hashOfConfig":"17"},{"size":363,"mtime":1637296793647,"results":"21","hashOfConfig":"17"},{"size":403,"mtime":1637190514347,"results":"22","hashOfConfig":"17"},{"size":529,"mtime":1637297558701,"results":"23","hashOfConfig":"17"},{"size":2073,"mtime":1637299074234,"results":"24","hashOfConfig":"17"},{"size":170,"mtime":1637190527230,"results":"25","hashOfConfig":"17"},{"size":1043,"mtime":1637291577674,"results":"26","hashOfConfig":"17"},{"size":1520,"mtime":1637297547424,"results":"27","hashOfConfig":"17"},{"size":337,"mtime":1637284233565,"results":"28","hashOfConfig":"17"},{"size":338,"mtime":1637291046000,"results":"29","hashOfConfig":"17"},{"size":5269,"mtime":1637299537123,"results":"30","hashOfConfig":"17"},{"size":1811,"mtime":1637295478410,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"cj226j",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\index.tsx",[],[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\App.tsx",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\index.tsx",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Card\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\styles\\global.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\index.tsx",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\List\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\index.tsx",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\Board\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\index.tsx",["65"],"import React, { useRef } from 'react';\r\nimport { Container, Content, Actions } from './styles';\r\nimport api from '../../services/api';\r\nimport { IoIosAddCircle } from 'react-icons/io';\r\ninterface NewCardProps {\r\n    handleCreateCard(\r\n        inputRef: React.RefObject<HTMLInputElement>,\r\n        textAreaRef: React.RefObject<HTMLTextAreaElement>\r\n    ): void;\r\n}\r\n\r\nconst NewCard: React.FC<NewCardProps> = ({\r\n    handleCreateCard\r\n}: NewCardProps) => {\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                <input ref={inputRef} type=\"text\" />\r\n                <textarea ref={textAreaRef} rows={5}></textarea>\r\n            </Content>\r\n            <Actions>\r\n                <IoIosAddCircle\r\n                    size={38}\r\n                    onClick={() => handleCreateCard(inputRef, textAreaRef)}\r\n                />\r\n            </Actions>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewCard;\r\n","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\Components\\NewCard\\styles.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\services\\api.ts",[],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\useFetch.ts",["66","67"],"import useSWR from 'swr';\r\nimport api from '../services/api';\r\n\r\nexport function useFetch<Data = any, Error = any>(url: string) {\r\n    const { data, error, mutate } = useSWR<Data, Error>(url, async (url) => {\r\n        const response = await api.get(url);\r\n        return response.data;\r\n    });\r\n\r\n    return { data, error, mutate };\r\n}\r\n","D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\hooks\\ActionsContext.tsx",["68","69"],"D:\\programaçao\\processos\\let's-code\\desafio-tecnico-frontend\\FRONT\\lets-code\\src\\utils\\toast.ts",[],{"ruleId":"70","severity":1,"message":"71","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":11},{"ruleId":"74","severity":1,"message":"75","line":4,"column":33,"nodeType":"76","messageId":"77","endLine":4,"endColumn":36,"suggestions":"78"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":46,"nodeType":"76","messageId":"77","endLine":4,"endColumn":49,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"75","line":34,"column":23,"nodeType":"76","messageId":"77","endLine":34,"endColumn":26,"suggestions":"80"},{"ruleId":"74","severity":1,"message":"75","line":173,"column":20,"nodeType":"76","messageId":"77","endLine":173,"endColumn":23,"suggestions":"81"},"@typescript-eslint/no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["82","83"],["84","85"],["86","87"],["88","89"],{"messageId":"90","fix":"91","desc":"92"},{"messageId":"93","fix":"94","desc":"95"},{"messageId":"90","fix":"96","desc":"92"},{"messageId":"93","fix":"97","desc":"95"},{"messageId":"90","fix":"98","desc":"92"},{"messageId":"93","fix":"99","desc":"95"},{"messageId":"90","fix":"100","desc":"92"},{"messageId":"93","fix":"101","desc":"95"},"suggestUnknown",{"range":"102","text":"103"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"102","text":"104"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"105","text":"103"},{"range":"105","text":"104"},{"range":"106","text":"103"},{"range":"106","text":"104"},{"range":"107","text":"103"},{"range":"107","text":"104"},[97,100],"unknown","never",[110,113],[1006,1009],[5047,5050]]